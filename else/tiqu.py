# _*_ coding:utf-8 _*_from tkinter import *import reimport osimport tkinter as tkimport tkinter.messageboxfrom tkinter import filedialogimport copyimport difflibimport pickle# 定义打开文件函数def openfiles():    global fname                                                                            # 声明全局变量    global fname1    fname = tkinter.filedialog.askopenfilenames(title='Open Files',                         # 打开文件                                                filetypes=[('All Files', '*'), ('text file', '*.txt')])    if len(fname) == 1:                                                                     # 如果第一次只打开一个文件，再执行一次打开文件        fname1 = tkinter.filedialog.askopenfilename(title='Open Files',                                                    filetypes=[('All Files', '*'), ('text file', '*.txt')])        return fname, fname1    else:        return fname# 定义弹窗函数def on_click():    global x    x = xls_text.get()    string = str("Eid：%s" % (x))    # print("xls名：%s" % (x))    tk.messagebox.showinfo(title='Confirm?', message=string)    return x# 检查文件是否重名def check_filename_available(filename):    n = [1]    def check_meta(file_name):        file_name_new = file_name        if os.path.isfile(file_name):            file_name_new = file_name[:file_name.rfind('.')]+'_'+str(n[0])+file_name[file_name.rfind('.'):]            n[0] += 1        if os.path.isfile(file_name_new):            file_name_new = check_meta(file_name)        return file_name_new    return_name = check_meta(filename)    return return_name# 定义抓取band信息函数def pv_fv():    string = str("You will compare PV/FV with PL")    tk.messagebox.showinfo(title='Confirm?', message=string)    # 读取每个文件名    for i in fname:        global data        data = []        data_list = []        data_list1 = []        data_list2 = []        # 读取文件的每一行        try:            with open(i, 'r', encoding='UTF-8') as log:                lines = log.readlines()        except:            with open(i, 'r', encoding='ANSI') as log:                lines = log.readlines()        for line in lines:            line = re.sub('/\*.+\*/', '', line)     # 删除文件注释            if 'Â' in line:                line = re.sub('Â', ' ', line)            if line != '\n' and '/Band' in line:    # 删除空行，读取带band信息行                data_list.append(line)              # 将文件存在data_list        data = copy.deepcopy(data_list)             # 将此环节的data_list存入data，避免随后面改动        for line1 in data_list:            line1 = re.sub('/Band\d{0,2}\.?[A-Z]?', '', line1)  # 删除上一步的文件的band信息            line1 = re.sub('\s.+\n$', '', line1)                # 删除每行句子空格以后的内容            data_list1.append(line1)                            # 将文件存在data_list1        for line3 in data_list1:            for line2 in lines:                if line3 in line2:                  # 在data_list中查找含有data_list1的内容                    data_list.append(line2)         # 将提取的内容存在data_list的后面        for line4 in data_list:            if line4 not in data_list2:             # 删除data_list中重复的                data_list2.append(line4)        path = "C:\\Users\\" + x + "\\Desktop\\database_check\\"    # 创建桌面地址        if os.path.exists(path) == False:                           # 新建路径            os.makedirs(path, 0o755)        i = re.sub(r'C:.+/', '', i)                                 # 提取文件的文件名        with open(path + i, 'w+', encoding='utf-8') as target:            if i == 'gpp3.txt':                target.writelines(data)            else:                target.writelines(data_list2)                       # 存储文件# diff比较两个文件def two_products():    global lin1    global tit    string = str("You will compare database with two products")    tk.messagebox.showinfo(title='Confirm?', message=string)    if len(fname) == 2:                                             # 如果一次打开两个文件        with open(fname[0], 'r', encoding='UTF-8') as log:            lin = log.readlines()        with open(fname[1], 'r', encoding='UTF-8') as log1:            lin1 = log1.readlines()        title = re.sub(r'C:.+/', '', fname[0])                      # 提取文件的文件名        title1 = re.sub(r'C:.+/', '', fname[1])                     # 提取文件的文件名        tit = re.sub('\..*', '', title1)    else:                                                           # 如果分两次打开文件        # 打开第一个文件        with open(fname[0], 'r', encoding='UTF-8') as log:            lin = log.readlines()        # 打开第二个文件        with open(fname1, 'r', encoding='UTF-8') as log1:            lin1 = log1.readlines()        title = re.sub(r'C:.+/', '', fname[0])                      # 提取文件的文件名        title1 = re.sub(r'C:.+/', '', fname1)                       # 提取文件的文件名        tit = re.sub('\..*', '', title1)    path = "C:\\Users\\" + x + "\\Desktop\\database_check\\"        # 创建桌面地址    if os.path.exists(path) == False:                               # 新建路径        os.makedirs(path, 0o755)    html_path = check_filename_available(path + tit + '.html')    with open(html_path, 'w+') as target:                # 创建html文件        target.write(hd.make_file(lin, lin1, fromdesc=title, todesc=title1, context=True))    # 定义标题，隐藏相同的        target.close()# 主程序hd = difflib.HtmlDiff(wrapcolumn=105)                               # 105个字符自动换行root = tk.Tk()# GUI界面# 打开文件按钮btn1 = tk.Button(root, text='Open Files', font=("Arial", 15),                 width=15, height=5, command=openfiles)                                 # 打开文件按钮btn2 = tk.Button(root, text="Two Products", font=("Arial", 12),                 command=two_products).place(x=585, y=170, anchor=S)                    # 按钮二btn3 = tk.Button(root, text="PV / FV", font=("Arial", 12),                 command=pv_fv).place(x=585, y=215, anchor=S)                           # 按钮三root.title("Text Compare widget（By EXHZAUY from CBC1 Func.system）                  ver 3.0（beta）")       # 窗口标题root.geometry("900x350")                                                                                    # 窗口大小btn1.pack(side='right')                                                                                     # 按钮一位置# 左侧说明text = tk.Text(root, width=55, height=30)                               # 定义文本框text.insert(1.0, 'Welcome to use Text compare widget (beta)\n\n'                 'First, open the file you want to retrieve\n\n'                 'Second, enter your Eid (lower case)\n\n'                 'Then, you can find your resulting file on your desktop\n\n'                 'database_check\\check1')                              # 文本框内容text.pack(side='left')# 输入框label = tk.Label(root, text="Eid：", font=("Arial", 10))                # 输入框标题label.pack()xls_text = tk.StringVar()xls = tk.Entry(root, textvariable=xls_text, font=("Arial", 12))# 存储变量的文件的名字data_path = 'C:\\Users\\Public\\eid.data'if os.path.exists(data_path):    # 以二进制读模式打开目标文件    with open(data_path, 'rb') as f:        # 将文件中的变量加载到当前工作区        name = pickle.load(f)else:    g = open(data_path, 'wb+')    name = ''    g.close()xls_text.set(name)                                                      # 输入窗初始化为上一次输入的结果xls.pack(side=TOP)button = tk.Button(root, text="Confirm", font=("Arial", 10),                   command=on_click).place(x=585, y=85, anchor=S)       # 定义Confirm按钮，调用弹框函数root.mainloop()# 初始化变量eid = xls_text.get()# 以二进制写模式打开目标文件h = open(data_path, 'wb')# 将变量存储到目标文件中区pickle.dump(eid, h)# 关闭文件h.close()